{"version":3,"sources":["components/section3/images/woodland.png","components/title/title.png","components/artwork/arrow_button.png","components/section3/icons/play.svg","components/artwork/background.png","components/artwork/background2.png","components/artwork/background3.png","components/title/title.component.jsx","components/section/section.component.jsx","components/section02/paragraph.component.jsx","components/section3/menu.component.jsx","components/section3/buttonTime.component.jsx","components/section3/timer.component.jsx","components/section3/play.component.jsx","components/section02/button/button.component.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Title","href","alt","src","title","className","Section","name","image","cssId","section","visible","children","text","props","id","activeClass","to","spy","smooth","Image","Paragraph","fragmentId","fragment","Menu","image1","image2","image3","ButtonTime","time","data-time","Timer","Play","playPause","play","onClick","viewBox","width","height","d","loop","type","Button","toggleHidden","App","playSong","setState","playing","pauseSong","state","isHidden1","isHidden2","isHidden3","isHidden4","isHidden5","isHidden6","songs","background1","background2","this","background3","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.af08ca42.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/woodland.e8719865.png\";","module.exports = __webpack_public_path__ + \"static/media/title.58eedc54.png\";","module.exports = __webpack_public_path__ + \"static/media/arrow_button.177fcbaf.png\";","module.exports = __webpack_public_path__ + \"static/media/play.c77444d9.svg\";","module.exports = __webpack_public_path__ + \"static/media/background.bd057b9d.png\";","module.exports = __webpack_public_path__ + \"static/media/background2.4bd3252c.png\";","module.exports = __webpack_public_path__ + \"static/media/background3.cc76b3d5.png\";","import React from \"react\";\r\nimport \"./title.styles.css\";\r\nimport title from \"./title.png\";\r\nexport const Title = () => {\r\n  return (\r\n    <div>\r\n      <a href=\"/\">\r\n        <img alt=\"title\" src={title} className=\"title\" />\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link, animateScroll as scroll } from \"react-scroll\";\r\nimport Image from \"../artwork/arrow_button.png\";\r\nimport \"./section.styles.css\";\r\n//import { Button } from \"../section02/button/button.component\";\r\nexport const Section = ({\r\n  name,\r\n  image,\r\n  cssId,\r\n  section,\r\n  visible,\r\n  children,\r\n  text,\r\n  props,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <section id={name} className={cssId}>\r\n        <h1 className=\"text\">{text}</h1>\r\n\r\n        <div>\r\n          {children}\r\n          <img alt=\"background\" src={image} className=\"background\" />\r\n        </div>\r\n\r\n        {/* {props.buttons.map((button) => (\r\n          <Button text={button} />\r\n        ))} */}\r\n        <Link activeClass=\"active\" to={section} spy={true} smooth={true}>\r\n          <div className=\"button\">\r\n            {visible === \"true\" ? (\r\n              <a href=\"/\">\r\n                <img className=\"buttons\" alt=\"slide-button\" src={Image} />\r\n              </a>\r\n            ) : null}\r\n          </div>\r\n        </Link>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"../section02/button/paragraph.styles.css\";\r\nexport const Paragraph = ({ fragmentId, fragment }) => {\r\n  return (\r\n    <span>\r\n      {\" \"}\r\n      <div className=\"fragment\">\r\n        <p className={fragmentId}>\r\n          <footer>\r\n            {fragment}\r\n            <br />\r\n            Find out more at http://EzineArticles.com/4770889\r\n          </footer>\r\n        </p>\r\n      </div>\r\n    </span>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"../section3/menu.styles.css\";\r\nimport image1 from \"./images/woodland.png\";\r\nimport image2 from \"./images/woodland.png\";\r\nimport image3 from \"./images/woodland.png\";\r\n\r\nexport const Menu = () => {\r\n  return (\r\n    <div className=\"menu\">\r\n      <div className=\"leftup\">Escapes</div>\r\n      <div className=\"leftdown\">\r\n        <img alt=\"woodland walk\" src={image1} className=\"image1\" />\r\n        <p className=\"text1\">Woodland Walk</p>\r\n        <img alt=\"woodland walk\" src={image2} className=\"image2\" />\r\n        <p className=\"text2\">Woodland Walk</p>\r\n        <img alt=\"woodland walk\" src={image3} className=\"image3\" />\r\n        <p className=\"text3\">Woodland Walk</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./buttonTime.styles.css\";\r\nexport const ButtonTime = ({ className, text, time }) => {\r\n  return (\r\n    <div>\r\n      <button className={className} data-time={time}>\r\n        {text}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { ButtonTime } from \"./buttonTime.component\";\r\nimport \"./timer.styles.css\";\r\nexport const Timer = () => {\r\n  return (\r\n    <div>\r\n      <p className=\"timerQuestion\">How much time would you like to meditate?</p>\r\n      <ButtonTime className=\"fiveMinutes\" time=\"300\" text=\"5 Minutes\" />\r\n      <ButtonTime className=\"tenMinutes\" time=\"600\" text=\"10 Minutes\" />\r\n      <ButtonTime className=\"fifteenMinutes\" time=\"900\" text=\"15 Minutes\" />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport play from \"./icons/play.svg\";\r\nimport \"./play.styles.css\";\r\nexport const Play = ({ playPause }) => {\r\n  //   const song = document.querySelector(\".song\");\r\n  //   const play = document.querySelector(\".play\");\r\n  //   const video = document.querySelector(\".vid-container video\");\r\n  //   play.addEventListener(\"click\", () => {\r\n  //     checkPlaying(song);\r\n  //   });\r\n\r\n  //   const checkPlaying = (song) => {\r\n  //     if (song.paused) {\r\n  //       song.play();\r\n  //       video.play();\r\n  //       play.src = \"./icons/pause.svg\";\r\n  //     } else {\r\n  //       song.pause();\r\n  //       video.pause();\r\n  //       play.src = \"./icons/play.svg\";\r\n  //     }\r\n  //   };\r\n\r\n  return (\r\n    <div className=\"playButton\">\r\n      <img src={play} alt=\"play\" className=\"play\" onClick={playPause} />\r\n      <svg viewBox=\"0 0 600 600\" width=\"500\" height=\"500\" className=\"heart\">\r\n        <path\r\n          d=\"M340.8,98.4c50.7,0,91.9,41.3,91.9,92.3c0,26.2-10.9,49.8-28.3,66.6L256,407.1L105,254.6c-15.8-16.6-25.6-39.1-25.6-63.9\r\n\tc0-51,41.1-92.3,91.9-92.3c38.2,0,70.9,23.4,84.8,56.8C269.8,121.9,302.6,98.4,340.8,98.4 M340.8,83C307,83,276,98.8,256,124.8\r\n\tc-20-26-51-41.8-84.8-41.8C112.1,83,64,131.3,64,190.7c0,27.9,10.6,54.4,29.9,74.6L245.1,418l10.9,11l10.9-11l148.3-149.8\r\n\tc21-20.3,32.8-47.9,32.8-77.5C448,131.3,399.9,83,340.8,83L340.8,83z\"\r\n        />\r\n      </svg>\r\n      <audio className=\"song\">\r\n        <source src=\"./sounds/rain.wav\" />\r\n      </audio>\r\n      <video className=\"vid-container\" loop>\r\n        <source src=\"./videos/forest.mp4\" type=\"video/mp4\" />\r\n      </video>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./button.styles.css\";\r\nexport const Button = ({ text, id, props, toggleHidden, children }) => {\r\n  return (\r\n    <div>\r\n      <button className={id} onClick={toggleHidden}>\r\n        {text}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\nimport { Title } from \"./components/title/title.component\";\nimport { Section } from \"./components/section/section.component\";\nimport { Paragraph } from \"./components/section02/paragraph.component\";\nimport { Menu } from \"./components/section3/menu.component\";\nimport { Timer } from \"./components/section3/timer.component\";\nimport { Play } from \"./components/section3/play.component\";\n\n//import { SlideButton } from \"./components/slide_button/slide-button.component\";\nimport { Button } from \"./components/section02/button/button.component\";\nimport background1 from \"./components/artwork/background.png\";\nimport background2 from \"./components/artwork/background2.png\";\nimport background3 from \"./components/artwork/background3.png\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isHidden1: false,\n      isHidden2: false,\n      isHidden3: false,\n      isHidden4: false,\n      isHidden5: false,\n      isHidden6: false,\n      songs: [],\n      playing: false,\n    };\n  }\n  playSong = () => {\n    this.setState({ playing: true });\n  };\n  pauseSong = () => {\n    this.setState({ playing: false });\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <Title />\n\n        <Section\n          name=\"section01\"\n          image={background1}\n          cssId=\"section01\"\n          section=\"section02\"\n          visible=\"true\"\n          // left={<Button id=\"one\">Meditation Essentials</Button>}\n        />\n\n        <Section\n          name=\"section02\"\n          image={background2}\n          cssId=\"section02\"\n          section=\"section03\"\n          visible=\"true\"\n          text=\" Relax your mind with everyday meditation\"\n        >\n          <Button\n            id=\"buttonOne\"\n            text=\"Meditation Essentials\"\n            toggleHidden={() =>\n              this.setState((state) => ({\n                isHidden1: !state.isHidden1,\n                isHidden2: false,\n                isHidden3: false,\n                isHidden4: false,\n                isHidden5: false,\n                isHidden6: false,\n              }))\n            }\n          />\n\n          {this.state.isHidden1 ? (\n            <Paragraph\n              fragmentId=\"fragmentOne\"\n              fragment='Meditation has been practiced for thousands of years, so there are\n            countless variations and definitions of the practice. Most forms of\n            meditation offer relaxation -- primarily through a quieting of the\n            mind -- and create a pause from the rapid pace of our lives to let\n            our mind and body catch up, re-balance, and re-center. Some\n            styles of meditations rely on complete silence, some employ the\n            repetition of specific words or \"mantras,\" some offer guided\n            imagery and/or affirmations, some focus on specific energy centers\n            or \"chakras\", some utilize specific sounds and music, some have\n            very ancient roots, rituals, and religious traditions.'\n            />\n          ) : (\n            <Button\n              id=\"buttonFour\"\n              text=\"Mindful Tech\"\n              toggleHidden={() =>\n                this.setState((state) => ({\n                  isHidden1: false,\n                  isHidden2: false,\n                  isHidden3: false,\n                  isHidden4: !state.isHidden4,\n                  isHidden5: false,\n                  isHidden6: false,\n                }))\n              }\n            />\n          )}\n\n          {this.state.isHidden4 && (\n            <Paragraph\n              fragmentId=\"fragmentFour\"\n              fragment=\"It's hard to imagine any of the wide variety of meditations that would not be beneficial. Of these varied types of meditations, the best type is simply the one you find most beneficial... the type that best matches you. So do experiment... and trust your feelings and instincts. It's also worth noting that though we may begin meditation for one reason (stress release, improved concentration and focus, deeper rest, etc.), we may soon discover other and more profound benefits (inner peace and balance, stronger sense of self and purpose, physical and emotional healing, etc.).\"\n            />\n          )}\n\n          <Button\n            id=\"buttonTwo\"\n            text=\"What's the best meditation for me?\"\n            toggleHidden={() =>\n              this.setState((state) => ({\n                isHidden1: false,\n                isHidden2: !state.isHidden2,\n                isHidden3: false,\n                isHidden4: false,\n                isHidden5: false,\n                isHidden6: false,\n              }))\n            }\n          />\n          {this.state.isHidden2 ? (\n            <Paragraph\n              fragmentId=\"fragmentTwo\"\n              fragment=\"It's hard to imagine any of the wide variety of meditations that would not be beneficial. \n              Of these varied types of meditations, the best type is simply the one you find most beneficial... \n              the type that best matches you. So do experiment... and trust your feelings and instincts. It's also \n              worth noting that though we may begin meditation for one reason (stress release, improved concentration \n              and focus, deeper rest, etc.), we may soon discover other and more profound benefits (inner peace and balance, \n              stronger sense of self and purpose, physical and emotional healing, etc.). \"\n            />\n          ) : (\n            <Button\n              id=\"buttonFive\"\n              text=\"How do I know if I'm meditating correctly?\"\n              toggleHidden={() =>\n                this.setState((state) => ({\n                  isHidden1: false,\n                  isHidden2: false,\n                  isHidden3: false,\n                  isHidden4: false,\n                  isHidden5: !state.isHidden5,\n                  isHidden6: false,\n                }))\n              }\n            />\n          )}\n          {this.state.isHidden5 && (\n            <Paragraph\n              fragmentId=\"fragmentFive\"\n              fragment=\"The first rule of meditation -- at least the meditation we teach -- is: You cannot do it wrong. \nMeditation should, first and foremost, return you to you. And you cannot experience you (or your process) incorrectly. \nIn fact, trying to do it right -- efforting -- is really the only obstacle to meditation.\"\n            />\n          )}\n\n          <Button\n            id=\"buttonThree\"\n            text=\"How often should I meditate?\"\n            toggleHidden={() =>\n              this.setState((state) => ({\n                isHidden1: false,\n                isHidden2: false,\n                isHidden3: !state.isHidden3,\n                isHidden4: false,\n                isHidden5: false,\n                isHidden6: false,\n              }))\n            }\n          />\n          {this.state.isHidden3 ? (\n            <Paragraph\n              fragmentId=\"fragmentThree\"\n              fragment=\"Meditation should not be or feel like an obligation -- though, needless to say, \nyou will have to make time to do it. [Also see next question.] Once a week is a good start. \nIf you can meditate more often, all the better. Doing a brief morning meditation can be extremely beneficial, \nas it sets the right tone for your day. The morning is a very powerful time, and even spending 5-10 minutes \nin meditation can establish an inner balance that will help support you throughout the day. \nThe morning is also an ideal time to align yourself and your energy with your intentions, your power, \nand the higher support for what you wish to create that day. Likewise, a brief meditation in the evening, \nor at the end of your work-day, helps you re-balance from the rigors of the day.\"\n            />\n          ) : (\n            <Button\n              id=\"buttonSix\"\n              text=\"Does meditation work right away?\"\n              toggleHidden={() =>\n                this.setState((state) => ({\n                  isHidden1: false,\n                  isHidden2: false,\n                  isHidden3: false,\n                  isHidden4: false,\n                  isHidden5: false,\n                  isHidden6: !state.isHidden6,\n                }))\n              }\n            />\n          )}\n          {this.state.isHidden6 && (\n            <Paragraph\n              fragmentId=\"fragmentSix\"\n              fragment=\"Yes... and no. Every meditation will almost certainly provide some immediate relaxation and relief from stress, \nfatigue, and emotional tension. In any given meditation, however, your experience can range from profound and wonderful \n(in terms of the depth of nurturing, clarity, release, and healing you find) to simply calming and balancing. And while one day your meditation may be incredibly vivid, the very next day you may struggle a bit. So, be prepared for this. \nThis range of experience is difficult to explain, except to say that meditation is an extremely organic process. \"\n            />\n          )}\n        </Section>\n\n        <Section cssId=\"section03\" image={background3}>\n          <Menu />\n          <Timer />\n          <Play\n            playPause={this.state.playing ? this.pauseSong : this.playSong}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n/* section has a background as prop and a slide button component\n */\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}